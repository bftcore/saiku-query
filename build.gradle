apply plugin: 'java'
apply plugin: 'idea'


dependencies {
    compile 'org.olap4j:olap4j:1.2.0'
    compile 'net.java.dev.javacc:javacc:5.0'
//    compile 'pentaho:mondrian:3.9.0.2'

    compile 'commons-collections:commons-collections:3.2'
    compile 'commons-dbcp:commons-dbcp:1.2.1'
    compile 'commons-pool:commons-pool:1.2'
    compile 'xml-apis:xml-apis:1.0.b2'
    compile 'xerces:xercesImpl:2.9.1'
    compile 'commons-lang:commons-lang:2.4'
    compile 'commons-io:commons-io:1.4'
    compile 'commons-logging:commons-logging:1.1.1'
    compile 'commons-math:commons-math:1.1'
    compile 'commons-discovery:commons-discovery:0.2'
    compile 'commons-vfs:commons-vfs:20100924-pentaho'
    compile 'javacup:javacup:10k'
    compile 'dom4j:dom4j:1.6.1'
    compile 'javax.validation:validation-api:1.0.0.GA'
    compile 'eigenbase:eigenbase-xom:1.3.1'
    compile 'org.apache.ant:ant:1.7.1'
    compile 'org.apache.ant:ant-launcher:1.7.1'
    compile 'eigenbase:eigenbase-properties:1.1.2'
    compile 'eigenbase:eigenbase-resgen:1.3.1'
    compile 'sun:jlfgr:1.0'
    compile 'javax.servlet:servlet-api:2.4'
    compile 'log4j:log4j:1.2.14'
    compile 'xalan:xalan:2.6.0'

    testCompile 'mysql:mysql-connector-java:5.1.17'
    testCompile 'hsqldb:hsqldb:1.8.0.10'
    testCompile 'junit:junit:3.8.1'
}

  apply plugin: 'java'
  apply plugin: 'groovy'
  apply plugin: 'idea'
  apply plugin: 'maven-publish'
  
  sourceCompatibility = 1.8
  version = addBuildNumber("3.9.qdp.9")

  def uniqProjectName = rootProject.name

  tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
  }

  idea {
    module {
      inheritOutputDirs = false
      outputDir = file('build/classes/main')
      testOutputDir = file('build/classes/test')
      downloadJavadoc = true
      name = uniqProjectName
    }
  }

  sourceSets {
    main {
      java {
        srcDir 'src/main/java'
      }
      resources.srcDirs = ['src/main/java', 'src/main/resources']
    }
    test {
      resources.srcDirs = ['src/test/java', 'src/test/resources']
      output.resourcesDir 'build/classes/test'
    }
  }

  jar {
    //custom jar's basename for readability: *<project>-<subproject>...*.jar
    baseName = uniqProjectName
  }

  repositories {
    maven {
      url "http://jin-server.bft.local:8097/nexus/content/repositories/central"

      artifactUrls "http://jin-server.bft.local:8097/nexus/content/repositories/vaadin-snapshots"
      artifactUrls "http://jin-server.bft.local:8097/nexus/content/repositories/vaadin-addons"
      artifactUrls "http://jin-server.bft.local:8097/nexus/content/repositories/codehaus-snapshots"
      artifactUrls "http://jin-server.bft.local:8097/nexus/content/repositories/JBoss"
      artifactUrls "http://jin-server.bft.local:8097/nexus/content/repositories/BFT_REL"
      artifactUrls "http://jin-server.bft.local:8097/nexus/content/repositories/repo.pentaho.org"
      artifactUrls "http://jin-server.bft.local:8097/nexus/content/repositories/swartgwt"
    }
    maven { url "http://jin-server.bft.local:8097/nexus/content/repositories/com.bftcom" }
    maven { url "http://jin-server.bft.local:8097/nexus/content/repositories/BFT_REL" }
    maven { url "http://jin-server.bft.local:8097/nexus/content/repositories/missing-artifacts" }
    maven { url "http://jin-server.bft.local:8097/nexus/content/repositories/jboss_public" }
    maven { url "http://jin-server.bft.local:8097/nexus/content/repositories/pentaho" }

    maven { url "http://jin-server.bft.local:8097/nexus/content/repositories/alabs-release-local/" }
    maven { url "http://jin-server.bft.local:8097/nexus/content/repositories/alabs-snapshot-local/" }


    // репозитории pentaho
    maven {
      url "http://jin-server.bft.local:8097/nexus/content/repositories/repo.pentaho.org/"
    }

  }

  task sourceJar (type : Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  publishing {
    repositories {
      maven {
        // change to point to your repo, e.g. http://my.org/repo
        url "${artifactory_contextUrl}"
        credentials {
          username = "${artifactory_user}"
          password = "${artifactory_password}"
        }
      }
    }
      publications {
          maven(MavenPublication) {
              groupId 'org.saiku'
              from components.java
              artifact (sourceJar) { // (2)
                  classifier = 'sources'
              }
          }
      }
  }

def addBuildNumber(version) {
  def env = System.getenv()
  def buildNumber = env.BUILD_NUMBER?.toInteger()
  return version + ((buildNumber != null) ? "." + buildNumber : "")
}